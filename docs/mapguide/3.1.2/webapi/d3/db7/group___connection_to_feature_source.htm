<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>MapGuide API Reference: Connection To a Feature Source</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link href="../../mg_open_source.css" rel="stylesheet" type="text/css" />
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">MapGuide API Reference
   
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.8.0 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
<script type="text/javascript" src="../../dynsections.js"></script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../modules.htm"><span>Modules</span></a></li>
      <li><a href="../../annotated.htm"><span>Classes</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('d3/db7/group___connection_to_feature_source.htm','../../');
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Friends</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Connection To a Feature Source</div>  </div>
<div class="ingroups"><a class="el" href="../../de/ddf/group___feature___service___module.htm">Feature Service</a></div></div><!--header-->
<div class="contents">
<h2>About feature sources </h2>
<p>A feature source contains feature data. The term 'feature source' refers to a feature data resource in the site server repository. The feature source is installed in the repository using the resource service (<a class="el" href="../../d8/de1/class_mg_resource_service.htm" title="Enables you to manipulate repositories and resources.">MgResourceService</a>). </p>
<p>What constitutes a feature source varies depending on the nature of the actual data source. For example, some data sources are text files, some are binary files, and some are relational databases. If the data source is a file, the file itself is stored in the repository. If the data source is a relational database, a connection specification is stored in the repository. Some relational databases support partitioning into multiple data sources. Each partition requires a separate connection specification. </p>
<h2>Storing and identifying feature sources </h2>
<p>In addition to features sources, the site server repository contains many other objects, which are collectively referred to as resources and identified by resource identifiers (<a class="el" href="../../d6/d80/class_mg_resource_identifier.htm" title="Creates and manipulates resource identifiers.">MgResourceIdentifier</a>). The resource identifier specifies the location of a resource in the repository by using a URL. </p>
<p>The feature source URL is of the form Library:://.../&lt;featureSourceName&gt;.FeatureSource. The ellipsis (...) represents an optional folder structure contained within the root Library folder. An example identifier is "Library://FeatureService/PointsMDB.FeatureSource". The FeatureSource extension is specific to the feature source resource. All of the methods in the <a class="el" href="../../d5/d10/class_mg_feature_service.htm" title="Provides an abstraction layer for the storage and retrieval of feature data in a technology-independe...">MgFeatureService</a> API that do actual work require an <a class="el" href="../../d6/d80/class_mg_resource_identifier.htm" title="Creates and manipulates resource identifiers.">MgResourceIdentifier</a> object as an argument. </p>
<h2>Before installing a feature source in the repository </h2>
<p>The <a class="el" href="../../d5/d10/class_mg_feature_service.htm" title="Provides an abstraction layer for the storage and retrieval of feature data in a technology-independe...">MgFeatureService</a> API provides a <a class="el" href="../../d5/d10/class_mg_feature_service_abef268d90b696e0fccd6dbcc43ec4fbb.htm#abef268d90b696e0fccd6dbcc43ec4fbb">TestConnection </a> method for testing the connection parameter values for a feature source prior to installation in the repository. For file-based feature sources the connection value could be a file name, a folder name, or a symbolic name which is used by the provider to query the operating system for the file location. For relational database feature sources, possible connection values include host name, service name, service instance name, user name, password, and datastore name. </p>
<p>The connection string used to connect to a feature source is specific to the feature source. Examples follow for various providers. </p>
<p>The <a class="el" href="../../d5/d10/class_mg_feature_service.htm" title="Provides an abstraction layer for the storage and retrieval of feature data in a technology-independe...">MgFeatureService</a> API provides a <a class="el" href="../../d5/d10/class_mg_feature_service_ad7de53817b4ae5c4ed27eb1e25c0fbef.htm#ad7de53817b4ae5c4ed27eb1e25c0fbef">GetConnectionPropertyValues </a> method for listing the names of the feature source partitions within a relational database. You can then construct a connection string for each partition and test it using <a class="el" href="../../d5/d10/class_mg_feature_service_abef268d90b696e0fccd6dbcc43ec4fbb.htm#abef268d90b696e0fccd6dbcc43ec4fbb">MgFeatureService::TestConnection(providerName, connectionString) </a>. </p>
<p>After the installation of the feature source in the repository, connection is done by a different <a class="el" href="../../d5/d10/class_mg_feature_service_a998e27028c21c80daa9cca94cba040d6.htm#a998e27028c21c80daa9cca94cba040d6">MgFeatureService::TestConnection(resource) </a> method that takes the feature source's resource identifier as an argument. </p>
<h2>Installing the feature source in the repository </h2>
<p>Install a feature source in the repository by: </p>
<ul>
<li>Specifying the location of the feature source in the repository in a resource identifier. </li>
<li>Uploading a feature source XML value containing the property values used to connect to and configure the feature source. The structure of a feature source XML value conforms to the <a class="el" href="../../d6/dae/group___feature_source__schema.htm">FeatureSource </a> XML schema. The element values vary according to the feature source type. Examples for each provider follow. </li>
<li>Uploading an XML value containing values governing the security of the feature source. See the <a class="el" href="../../da/d45/group___resource_document_header__schema.htm">ResourceDocumentHeader </a> and <a class="el" href="../../da/d5b/group___resource_security__schema.htm">ResourceSecurity</a> schema topics for a general discussion about the XML element definitions. See the contents of an example header file at the end of this topic. </li>
<li>Uploading the file or files which constitute the feature source if the feature source is file-based. Upload the feature source property XML file and document header XML file using the <a class="el" href="../../d8/de1/class_mg_resource_service_a613e2512f7e7c06b772e57ffd132aedd.htm#a613e2512f7e7c06b772e57ffd132aedd">MgResourceService::SetResource Method</a>. Upload a feature source file using the <a class="el" href="../../d8/de1/class_mg_resource_service_acb0e9ea54a9bb752daf8355f3b8a0a31.htm#acb0e9ea54a9bb752daf8355f3b8a0a31">MgResourceService::SetResourceData Method</a>.</li>
</ul>
<h2>Examples for various providers</h2>
<h3>Autodesk.Oracle.2.0 Provider </h3>
<p>The feature source is a relational database, which supports multiple partitions, referred to as datastores. Each datastore can be a feature source. You use Sysadmin.exe to create datastores and add usernames and passwords. The tool and documentation for doing these and other tasks is contained in the installation. For a typical installation, the path is <em>C:\Program Files\Common Files\Autodesk Shared\GIS\FDO\2.0\Oracle</em>. </p>
<p>Example Connection String </p>
<div class="fragment"><pre class="fragment">Username=smith;Password=test;Service=TuxService;DataStore=TUX
</pre></div> <p>All parameters are required. </p>
<p>The DataStore property value identifies the feature source partition within the database. This value can be retrieved from the database using the <a class="el" href="../../d5/d10/class_mg_feature_service_ad7de53817b4ae5c4ed27eb1e25c0fbef.htm#ad7de53817b4ae5c4ed27eb1e25c0fbef">MgFeatureService::GetConnectionPropertyValues Method</a>. </p>
<p>The Service property value identifies an entry in the <em>tnsnames.ora</em> file located in the Oracle instance or Oracle client installation on the local host. </p>
<div class="Example">
<b>Example (xml)</b>
<br>
 <p>Feature Source XML File</p>
<p>The filename is TuxService.FeatureSource. </p>
<div class="fragment"><pre class="fragment">&lt;?xml version=<span class="stringliteral">&quot;1.0&quot;</span> encoding=<span class="stringliteral">&quot;UTF-8&quot;</span>?&gt;
&lt;FeatureSource version=<span class="stringliteral">&quot;1.0.0&quot;</span> xmlns:xsi=<span class="stringliteral">&quot;http://www.w3.org/2001/XMLSchema-instance &quot;</span> xsi:noNamespaceSchemaLocation=<span class="stringliteral">&quot;FeatureSource-1.0.0.xsd&quot;</span>&gt;
  &lt;Provider&gt;Autodesk.Oracle.2.0&lt;/Provider&gt;
  &lt;ConnectionProperties&gt;
    &lt;ConnectionProperty&gt;
      &lt;Name&gt;DataStore&lt;/Name&gt;
      &lt;Value&gt;TUX&lt;/Value&gt;
    &lt;/ConnectionProperty&gt;
    &lt;ConnectionProperty&gt;
      &lt;Name&gt;Username&lt;/Name&gt;
      &lt;Value&gt;smith&lt;/Value&gt;
    &lt;/ConnectionProperty&gt;
    &lt;ConnectionProperty&gt;
      &lt;Name&gt;Password&lt;/Name&gt;
      &lt;Value&gt;test&lt;/Value&gt;
    &lt;/ConnectionProperty&gt;
    &lt;ConnectionProperty&gt;
      &lt;Name&gt;Service&lt;/Name&gt;
      &lt;Value&gt;TuxService&lt;/Value&gt;
    &lt;/ConnectionProperty&gt;
  &lt;/ConnectionProperties&gt;
  &lt;Configuration/&gt;
  &lt;SpatialContext/&gt;
  &lt;LongTransaction/&gt;
&lt;/FeatureSource&gt;
</pre></div> </div>
 <h3>Autodesk.ArcSDE.1.0 Provider </h3>
<p>The feature source is a relational database. Access to it is indirect. The provider talks to an ArcSDE client, which talks to the ArcSDE server, which talks to the feature source. </p>
<p>Example Connection String </p>
<div class="fragment"><pre class="fragment">Username=smith;Password=test;Server=otwhost1;Instance=sde_inst1;Datastore=Default Datastore
</pre></div> <p>All parameters are required. </p>
<p>The Server value is a hostname whose IP address can be resolved using a network domain name server. </p>
<p>The instance value must appear in the services file on the local host. The path is <em>C:\WINDOWS\system32\drivers\etc\services</em>. An example entry is "sde_inst1 5151/tcp #ArcSDE Server listening port". </p>
<p>The Datastore property value identifies the feature source partition within the database. This value can be retrieved from the database using the <a class="el" href="../../d5/d10/class_mg_feature_service_ad7de53817b4ae5c4ed27eb1e25c0fbef.htm#ad7de53817b4ae5c4ed27eb1e25c0fbef">MgFeatureService::GetConnectionPropertyValues Method </a>. A value of "Default Datastore" indicates that only one partition exists. </p>
<div class="Example">
<b>Example (xml)</b>
<br>
 <p>Feature Source XML File </p>
<p>The filename is <em>sde_inst1.FeatureSource</em>. </p>
<div class="fragment"><pre class="fragment">&lt;?xml version=<span class="stringliteral">&quot;1.0&quot;</span> encoding=<span class="stringliteral">&quot;UTF-8&quot;</span>?&gt;
&lt;FeatureSource version=<span class="stringliteral">&quot;1.0.0&quot;</span> xmlns:xsi=<span class="stringliteral">&quot;http://www.w3.org/2001/XMLSchema-instance &quot;</span> xsi:noNamespaceSchemaLocation=<span class="stringliteral">&quot;FeatureSource-1.0.0.xsd&quot;</span>&gt;
  &lt;Provider&gt;Autodesk.ArcSDE.1.0&lt;/Provider&gt;
  &lt;ConnectionProperties&gt;
    &lt;ConnectionProperty&gt;
      &lt;Name&gt;Datastore&lt;/Name&gt;
      &lt;Value&gt;Default Datastore&lt;/Value&gt;
    &lt;/ConnectionProperty&gt;
    &lt;ConnectionProperty&gt;
      &lt;Name&gt;Username&lt;/Name&gt;
      &lt;Value&gt;smith&lt;/Value&gt;
    &lt;/ConnectionProperty&gt;
    &lt;ConnectionProperty&gt;
      &lt;Name&gt;Password&lt;/Name&gt;
      &lt;Value&gt;test&lt;/Value&gt;
    &lt;/ConnectionProperty&gt;
    &lt;ConnectionProperty&gt;
      &lt;Name&gt;Server&lt;/Name&gt;
      &lt;Value&gt;otwhost1&lt;/Value&gt;
    &lt;/ConnectionProperty&gt;
    &lt;ConnectionProperty&gt;
      &lt;Name&gt;Instance&lt;/Name&gt;
      &lt;Value&gt;sde_inst1&lt;/Value&gt;
    &lt;/ConnectionProperty&gt;
  &lt;/ConnectionProperties&gt;
  &lt;Configuration/&gt;
  &lt;SpatialContext/&gt;
&lt;LongTransaction/&gt;
&lt;/FeatureSource&gt;
</pre></div> </div>
 <h3>Autodesk.Sdf.3.0 Provider</h3>
<p>The feature source is a file. As part of installing the feature source in the repository, the <em>.sdf</em> file is loaded into the repository. </p>
<p>Example Connection String</p>
<div class="fragment"><pre class="fragment">File=C:/SDFFeatureResources/testSDF.sdf;ReadOnly=FALSE
</pre></div> <p>The File parameter is mandatory, and the ReadOnly parameter defaults to FALSE. </p>
<div class="Example">
<b>Example (xml)</b>
<br>
 <p>Feature Source XML File </p>
<p>The ConnectionProperty element whose Name is File has a Value element that is a symbolic reference to the location of the <em>.sdf</em> file in the repository. </p>
<div class="fragment"><pre class="fragment">&lt;?xml version=<span class="stringliteral">&quot;1.0&quot;</span> encoding=<span class="stringliteral">&quot;UTF-8&quot;</span>?&gt;
&lt;FeatureSource version=<span class="stringliteral">&quot;1.0.0&quot;</span> xmlns:xsi=<span class="stringliteral">&quot;http://www.w3.org/2001/XMLSchema-instance &quot;</span> xsi:noNamespaceSchemaLocation=<span class="stringliteral">&quot;FeatureSource-1.0.0.xsd&quot;</span>&gt;
  &lt;Provider&gt;Autodesk.Sdf.3.0&lt;/Provider&gt;
  &lt;ConnectionProperties&gt;
    &lt;ConnectionProperty&gt;
      &lt;Name&gt;File&lt;/Name&gt;
      &lt;Value&gt;%MG_DATA_FILE_PATH%&lt;/Value&gt;
    &lt;/ConnectionProperty&gt;
    &lt;ConnectionProperty&gt;
      &lt;Name&gt;ReadOnly&lt;/Name&gt;
      &lt;Value&gt;FALSE&lt;/Value&gt;
    &lt;/ConnectionProperty&gt;
  &lt;/ConnectionProperties&gt;
  &lt;SpatialContext/&gt;
  &lt;LongTransaction/&gt;
&lt;/FeatureSource&gt;
</pre></div> </div>
 <h3>Autodesk.Shp.1.0 Provider </h3>
<p>The feature source is a set of up to 4 related files, collectively referred to as shapefiles. They consist of a <em>.shp</em> file containing the shape geometry, the <em>.shx</em> file containing the shape row index, the <em>.dbf</em> file containing shape attributes in dBASE format, and the <em>.prj</em> file containing the coordinate system. </p>
<p>It is possible to connect to a <em>.shp</em> file by itself. The SHP provider treats each <em>.shp</em> and associated <em>.dbf</em> file as a feature class with a single geometry property and optionally, with data attribute properties. </p>
<p>The four files can be accessed by applications other than the provider. In addition the provider may create two files that are used by the provider and not by other applications: an <em>.idx</em> file containing a spatial index and an .xml configuration file containing a mapping of the SHP data in the <em>.shp</em> file and the DBF data in the <em>.dbf</em> file to feature classes and properties in the FDO data model. </p>
<p>The connection string used as an argument to the TestConnection() method references a folder in the file system. As part of installing the feature source in the repository, the shapefiles (<em>.shp</em>, <em>.shx</em>, <em>.dbf</em>, and <em>.prj</em> files) are loaded into the repository. The value of the DefaultFileLocation element as specified in the feature source XML file is a symbolic reference to the location of the shapefiles in the repository. </p>
<p>Example Connection String </p>
<div class="fragment"><pre class="fragment">DefaultFileLocation=C:/SHPFeatureResources;TemporaryFileLocation=C:/SHPFeatureResources
</pre></div> <div class="Example">
<b>Example (xml)</b>
<br>
 <p>Feature Source XML File </p>
<div class="fragment"><pre class="fragment">&lt;?xml version=<span class="stringliteral">&quot;1.0&quot;</span> encoding=<span class="stringliteral">&quot;UTF-8&quot;</span>?&gt;
&lt;FeatureSource version=<span class="stringliteral">&quot;1.0.0&quot;</span> xmlns:xsi=<span class="stringliteral">&quot;http://www.w3.org/2001/XMLSchema-instance &quot;</span> xsi:noNamespaceSchemaLocation=<span class="stringliteral">&quot;FeatureSource-1.0.0.xsd&quot;</span>&gt;
  &lt;Provider&gt;Autodesk.Shp.1.0&lt;/Provider&gt;
  &lt;ConnectionProperties&gt;
    &lt;ConnectionProperty&gt;
      &lt;Name&gt;DefaultFileLocation&lt;/Name&gt;
      &lt;Value&gt;%MG_DATA_FILE_PATH%&lt;/Value&gt;
    &lt;/ConnectionProperty&gt;
    &lt;ConnectionProperty&gt;
      &lt;Name&gt;TemporaryFileLocation&lt;/Name&gt;
    &lt;/ConnectionProperty&gt;
  &lt;/ConnectionProperties&gt;
  &lt;SpatialContext/&gt;
  &lt;LongTransaction/&gt;
&lt;/FeatureSource&gt;
</pre></div> </div>
 <h3>Autodesk.RFP.1.0 Provider </h3>
<p>Example Connection String </p>
<div class="fragment"><pre class="fragment">DefaultRasterFileLocation=C:/RasterFeatureResources
</pre></div> <div class="Example">
<b>Example (xml)</b>
<br>
 <p>Feature Source XML File </p>
<div class="fragment"><pre class="fragment">&lt;?xml version=<span class="stringliteral">&quot;1.0&quot;</span> encoding=<span class="stringliteral">&quot;UTF-8&quot;</span>?&gt;
&lt;FeatureSource version=<span class="stringliteral">&quot;1.0.0&quot;</span> xmlns:xsi=<span class="stringliteral">&quot;http://www.w3.org/2001/XMLSchema-instance &quot;</span> xsi:noNamespaceSchemaLocation=<span class="stringliteral">&quot;FeatureSource-1.0.0.xsd&quot;</span>&gt;
  &lt;Provider&gt;Autodesk.RFP.1.0&lt;/Provider&gt;
  &lt;ConnectionProperties&gt;
    &lt;ConnectionProperty&gt;
      &lt;Name&gt;DefaultRasterFileLocation&lt;/Name&gt;
      &lt;Value&gt;%MG_DATA_FILE_PATH%&lt;/Value&gt;
    &lt;/ConnectionProperty&gt;
  &lt;/ConnectionProperties&gt;
  &lt;SpatialContext/&gt;
  &lt;LongTransaction/&gt;
&lt;/FeatureSource&gt;
</pre></div> </div>
 <h3>Autodesk.ODBC.1.0 Provider</h3>
<p>Typically you use this provider is to access text-based feature source files. </p>
<p>The essential first step is to use a Windows OS administrative tool to define a data source name. This action associates a symbolic name with a file path. You then use the symbolic name in the connection string and XML feature source file. </p>
<p>On an XP computer, the path to the ODBC Data Source Administrator is Start &gt; Settings &gt; Control Panel &gt; Administrative Tools &gt; Data Sources (ODBC). You can create a User DSN (Data Source Name), a System DSN or File DSN in the ODBC Data Source Administrator dialog box. </p>
<p>The sequence of clicks or data entry to create a User or System DSN for a Microsoft Access <em>.mdb</em> file is System DSN or User DSN/Add &gt; Create New Data Source/Microsoft Access Driver (<em>*.mdb</em>) &gt; Finish &gt; ODBC Microsoft Access Setup/&lt;type name&gt; &gt; Select &gt; Select Database/&lt;select folder&gt; &gt; &lt;select file&gt; &gt; OK &gt; ODBC Microsoft Access Setup/OK. The name that you enter is the DSN name and is used in the connection string and the XML feature source file. </p>
<p>The sequence of clicks or data entry to create a User or System DSN for a dBase <em>.dbf</em> file is System DNS or User DSN/Add &gt; Create New Data Source/Microsoft dBase Driver (<em>*.dbf</em>) &gt; Finish &gt; ODBC dBase Setup/&lt;type name&gt; &gt; Save &gt; Create New Data Source/Next &gt; Finish &gt; Select Directory&gt; Select Database/&lt;select folder&gt; &gt; &lt;select file&gt; &gt; OK &gt; ODBC dBase Setup/OK. If "Select Directory" is unavailable, clear "Use Current Directory". The name that you enter is the DSN name and is used in the connection string and XML feature source file. </p>
<p>The sequence of clicks or data entry to create a File DSN for a Microsoft Access <em>.mdb</em> file is File DSN/Add &gt; Create New Data Source/Microsoft Access Driver (<em>*.mdb</em>) &gt; Next&gt; Browse &gt; Save As/&lt;pick folder&gt; &gt; &lt;type filename&gt; Finish &gt; ODBC Microsoft Access Setup/Select &gt; Select Database/&lt;select folder&gt; &gt; &lt;select file&gt; &gt; OK &gt; ODBC Microsoft Access Setup/OK. The filename that you enter will be given an extension of <em>.dsn</em>. </p>
<p>Example Connection String </p>
<div class="fragment"><pre class="fragment">DataSourceName=Country
</pre></div> <div class="Example">
<b>Example (xml)</b>
<br>
 <p>Feature Source XML File </p>
<div class="fragment"><pre class="fragment">&lt;?xml version=<span class="stringliteral">&quot;1.0&quot;</span> encoding=<span class="stringliteral">&quot;UTF-8&quot;</span>?&gt;
&lt;FeatureSource version=<span class="stringliteral">&quot;1.0.0&quot;</span> xmlns:xsi=<span class="stringliteral">&quot;http://www.w3.org/2001/XMLSchema-instance &quot;</span> xsi:noNamespaceSchemaLocation=<span class="stringliteral">&quot;FeatureSource-1.0.0.xsd&quot;</span>&gt;
  &lt;Provider&gt;Autodesk.ODBC.1.0&lt;/Provider&gt;
  &lt;ConnectionProperties&gt;
    &lt;ConnectionProperty&gt;
      &lt;Name&gt;DataSourceName&lt;/Name&gt;
      &lt;Value&gt;Country&lt;/Value&gt;
    &lt;/ConnectionProperty&gt;
    &lt;ConnectionProperty&gt;
      &lt;Name&gt;UserId&lt;/Name&gt;
    &lt;/ConnectionProperty&gt;
    &lt;ConnectionProperty&gt;
      &lt;Name&gt;Password&lt;/Name&gt;
    &lt;/ConnectionProperty&gt;
  &lt;/ConnectionProperties&gt;
  &lt;Configuration/&gt;
  &lt;SpatialContext/&gt;
  &lt;LongTransaction/&gt;
&lt;/FeatureSource&gt;
</pre></div> </div>
 <div class="Example">
<b>Example (xml)</b>
<br>
 <p>ResourceDocumentHeader XML File</p>
<div class="fragment"><pre class="fragment">&lt;?xml version=<span class="stringliteral">&quot;1.0&quot;</span> encoding=<span class="stringliteral">&quot;UTF-8&quot;</span>?&gt;
&lt;ResourceDocumentHeader xmlns:xsi=<span class="stringliteral">&quot;http://www.w3.org/2001/XMLSchema-instance &quot;</span> xsi:noNamespaceSchemaLocation=<span class="stringliteral">&quot;ResourceDocumentHeader-1.0.0.xsd&quot;</span>&gt;
  &lt;Security&gt;
    &lt;Inherited&gt;<span class="keyword">true</span>&lt;/Inherited&gt;
  &lt;/Security&gt;
&lt;/ResourceDocumentHeader&gt;
</pre></div> </div>
 <h2>Examples</h2>
<p>The code samples here how to add feature sources to the repository. You connect to a feature source in the repository. For example code showing how to connect to a feature source, see <a class="el" href="../../d5/d10/class_mg_feature_service_abef268d90b696e0fccd6dbcc43ec4fbb.htm#abef268d90b696e0fccd6dbcc43ec4fbb">MgFeatureService::TestConnection Method (MgResourceIdentifier*)</a>. </p>
<div class="PhpExample">
<b>Example (PHP)</b>
<br>
 <p>The first example adds a resource to the repository for a connection to an FDO Provider for Oracle. Since the connection is to a relational database and not a file, you need only call <a class="el" href="../../d8/de1/class_mg_resource_service_a613e2512f7e7c06b772e57ffd132aedd.htm#a613e2512f7e7c06b772e57ffd132aedd" title="Adds a new resource to a resource repository, or updates an existing resource.">MgResourceService::SetResource</a> passing in the FeatureSource XML containing the property values for the connection to the provider. </p>
<div class="fragment"><pre class="fragment">&lt;?php
<span class="comment">// creating the resource in the repository for a</span>
<span class="comment">// connection to an FDO Provider for Oracle</span>
<span class="comment">// first arg to $resourceService-&gt;SetResource()</span>
$featSrcResIdArg = <span class="stringliteral">&quot;Library://FeatureService/testOracle.FeatureSource&quot;</span>;
$featSrcResId = <span class="keyword">new</span> <a class="code" href="../../d6/d80/class_mg_resource_identifier.htm" title="Creates and manipulates resource identifiers.">MgResourceIdentifier</a>($featSrcResIdArg);

<span class="comment">// second arg to $resourceService-&gt;SetResource()</span>
$featSrcFileByteContent = <span class="keyword">new</span> <a class="code" href="../../d4/d3a/class_mg_byte_source.htm" title="Represents a source of byte data with a specific content type.">MgByteSource</a>($pathToFeatSrcFile);
$featSrcFileReaderContent = $featSrcFileByteContent-&gt;GetReader();

<span class="comment">// third arg to $resourceService-&gt;SetResource()</span>
$headerPathByteContent = <span class="keyword">new</span> <a class="code" href="../../d4/d3a/class_mg_byte_source.htm" title="Represents a source of byte data with a specific content type.">MgByteSource</a>($headerPath);
$headerPathReaderContent = $headerPathByteContent-&gt;GetReader();

<span class="comment">// add the resource to the repository</span>
$resourceService-&gt;SetResource($featSrcResId, $featSrcFileReaderContent, $headerPathReaderContent);
?&gt;
</pre></div> </div>
 <div class="PhpExample">
<b>Example (PHP)</b>
<br>
 The second example adds a resource to the repository for a connection to an FDO Provider for SDF. Since the connection is to a file, you must call <a class="el" href="../../d8/de1/class_mg_resource_service_a613e2512f7e7c06b772e57ffd132aedd.htm#a613e2512f7e7c06b772e57ffd132aedd" title="Adds a new resource to a resource repository, or updates an existing resource.">MgResourceService::SetResource</a> passing in the FeatureSource XML containing the property values for the connection to the SDF file, and you must call <a class="el" href="../../d8/de1/class_mg_resource_service_acb0e9ea54a9bb752daf8355f3b8a0a31.htm#acb0e9ea54a9bb752daf8355f3b8a0a31" title="Adds resource data  to the specified resource.">MgResourceService::SetResourceData</a> passing in the contents of the SDF file. </p>
<div class="fragment"><pre class="fragment">&lt;?php
<span class="comment">// creating the resource in the repository for a</span>
<span class="comment">// connection to an FDO Provider for SDF</span>
<span class="comment">// first arg to $resourceService-&gt;SetResource()</span>
$featSrcResIdArg = <span class="stringliteral">&quot;Library://FeatureService/testSDF.FeatureSource&quot;</span>;
$featSrcResId = <span class="keyword">new</span> <a class="code" href="../../d6/d80/class_mg_resource_identifier.htm" title="Creates and manipulates resource identifiers.">MgResourceIdentifier</a>($featSrcResIdArg);

<span class="comment">// second arg to $resourceService-&gt;SetResource()</span>
$featSrcFileByteContent = <span class="keyword">new</span> <a class="code" href="../../d4/d3a/class_mg_byte_source.htm" title="Represents a source of byte data with a specific content type.">MgByteSource</a>($pathToFeatSrcFile);
$featSrcFileReaderContent = $featSrcFileByteContent-&gt;GetReader();

<span class="comment">// third arg to $resourceService-&gt;SetResource()</span>
$headerPathByteContent = <span class="keyword">new</span> <a class="code" href="../../d4/d3a/class_mg_byte_source.htm" title="Represents a source of byte data with a specific content type.">MgByteSource</a>($headerPath);
$headerPathReaderContent = $headerPathByteContent-&gt;GetReader();

<span class="comment">// add the resource to the repository</span>
$resourceService-&gt;SetResource($featSrcResId, $featSrcFileReaderContent, $headerPathReaderContent);

<span class="comment">// add the contents of the SDF file to the repository</span>
$fileByteContent = <span class="keyword">new</span> <a class="code" href="../../d4/d3a/class_mg_byte_source.htm" title="Represents a source of byte data with a specific content type.">MgByteSource</a>($pathToDataFile);
$fileReader = $fileByteContent-&gt;GetReader();
$resourceService-&gt;SetResourceData($featSrcResId, $fileName, <span class="stringliteral">&quot;File&quot;</span>, $fileReader);
?&gt;
</pre></div> </div>
 <div class="CSharpExample">
<b>Example (C#)</b>
<br>
 <div class="fragment"><pre class="fragment"><span class="keyword">using</span> OSGeo.MapGuide;
<span class="keyword">using</span> OSGeo.MapGuide.Schema.FeatureSource;
<span class="comment">// The MgResourceService example code shows the creation of an instance.</span>
<span class="keyword">private</span> <a class="code" href="../../d8/de1/class_mg_resource_service.htm" title="Enables you to manipulate repositories and resources.">MgResourceService</a> resourceService;

<span class="keyword">public</span> <span class="keywordtype">void</span> ConnectToSdfFeatureClassFile(<a class="code" href="../../d6/d80/class_mg_resource_identifier.htm" title="Creates and manipulates resource identifiers.">MgResourceIdentifier</a> resourceId,
    Boolean readOnly, String filename, String SDFProviderName)
{
    FileInfo info = <span class="keyword">new</span> FileInfo(fileName);

    <span class="comment">// Check if the specified file exists</span>
    <span class="keywordflow">if</span> (!info.Exists)
    {
        <span class="keywordflow">throw</span> <span class="keyword">new</span> FileNotFoundException(
            <span class="keywordtype">string</span>.Format(<span class="stringliteral">&quot;The specified file {1} doesn&#39;t exist.&quot;</span>, info.FullName));
    }

    <span class="comment">// an xml string containing values for the two SDF connection parameters: File and ReadOnly</span>
    String featureSourceDefinition;

    <span class="comment">// Build the feature source object model</span>
    FeatureSourceType fsType = <span class="keyword">new</span> FeatureSourceType();

    fsType.Provider = SDFProviderName; <span class="comment">// FDO provider name, case sensitive</span>

    NameValuePairType p1 = <span class="keyword">new</span> NameValuePairType();
    p1.Name = <span class="stringliteral">&quot;ReadOnly&quot;</span>;
    p1.Value = readOnly.ToString(); <span class="comment">// non case sensitive</span>
    NameValuePairType p2 = <span class="keyword">new</span> NameValuePairType();
    p2.Name = <span class="stringliteral">&quot;File&quot;</span>;
    p2.Value = info.FullName; <span class="comment">// Either double backslash or single backslash is OK for the file path</span>

    fsType.Parameter = <span class="keyword">new</span> NameValuePairType[] { p2, p1 };

    <span class="comment">// Serialize the feature source object model to xml string</span>
    <span class="keyword">using</span> (StringWriter writer = <span class="keyword">new</span> StringWriter())
    {
        XmlSerializer xs = <span class="keyword">new</span> XmlSerializer(fsType.GetType());
        xs.Serialize(writer, fsType);
        featureSourceDefinition =  writer.ToString();
    }

    <span class="comment">// Add the resource to repository</span>
    byte[] bytes = Utilities.StringToBytes(featureSourceDefinition);
    <a class="code" href="../../d4/d3a/class_mg_byte_source.htm" title="Represents a source of byte data with a specific content type.">MgByteSource</a> source = <span class="keyword">new</span> <a class="code" href="../../d4/d3a/class_mg_byte_source.htm" title="Represents a source of byte data with a specific content type.">MgByteSource</a>(bytes, bytes.Length);
    resourceService.<a class="code" href="../../d8/de1/class_mg_resource_service_a613e2512f7e7c06b772e57ffd132aedd.htm#a613e2512f7e7c06b772e57ffd132aedd" title="Adds a new resource to a resource repository, or updates an existing resource.">SetResource</a>(resourceId, source.<a class="code" href="../../d4/d3a/class_mg_byte_source_a6bf3f20461a4f6ae57526f119a52f744.htm#a6bf3f20461a4f6ae57526f119a52f744" title="Gets a reader for this byte source.">GetReader</a>(), null);
}
</pre></div> </div>
 </div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>

    <li class="footer">Comments or suggestions? Send us <a href="http://mapguide.osgeo.org/feedback">feedback</a>. | Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.0 </li>
   </ul>
 </div>


</body>
</html>
