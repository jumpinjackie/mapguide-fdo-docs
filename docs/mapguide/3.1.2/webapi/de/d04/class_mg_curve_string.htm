<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>MapGuide API Reference: MgCurveString Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link href="../../mg_open_source.css" rel="stylesheet" type="text/css" />
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">MapGuide API Reference
   
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.8.0 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
<script type="text/javascript" src="../../dynsections.js"></script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../modules.htm"><span>Modules</span></a></li>
      <li class="current"><a href="../../annotated.htm"><span>Classes</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="../../classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="../../inherits.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="../../functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('de/d04/class_mg_curve_string.htm','../../');
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Friends</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">MgCurveString Class Reference<div class="ingroups"><a class="el" href="../../db/d78/group___mg_curve_string.htm">MgCurveString</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>An <a class="el" href="../../de/d04/class_mg_curve_string.htm" title="An MgCurveString is composed of one or more curve segments.">MgCurveString</a> is composed of one or more curve segments.  
 <a href="../../de/d04/class_mg_curve_string.htm#details">More...</a></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="../../closed.png" alt="+"/> Inheritance diagram for MgCurveString:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><img src="../../de/deb/class_mg_curve_string__inherit__graph.png" border="0" usemap="#_mg_curve_string_inherit__map" alt="Inheritance graph"/></div>
<map name="_mg_curve_string_inherit__map" id="_mg_curve_string_inherit__map">
<area shape="rect" id="node2" href="../../d5/dc5/class_mg_curve.htm" title="MgCurve is an abstract base class. MgCurveString and MgLineString are concrete classes derived from M..." alt="" coords="37,229,109,256"/><area shape="rect" id="node3" href="../../d1/d85/class_mg_geometry.htm" title="MgGeometry is an abstract base class for all of the geometry types." alt="" coords="24,155,121,181"/><area shape="rect" id="node4" href="../../dc/d21/class_mg_geometric_entity.htm" title="MgGeometricEntity is an abstract base class that is the root of all geometry and geometry component c..." alt="" coords="5,80,140,107"/><area shape="rect" id="node5" href="../../d8/dfa/class_mg_serializable.htm" title="MgSerializable" alt="" coords="19,5,126,32"/></map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>

<p><a href="../../df/dbf/class_mg_curve_string-members.htm">List of all members.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a178122c63235188d5e695c9dff3ae5a3"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../dc/d21/class_mg_geometric_entity.htm">MgGeometricEntity</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d04/class_mg_curve_string_a178122c63235188d5e695c9dff3ae5a3.htm#a178122c63235188d5e695c9dff3ae5a3">Copy</a> ()</td></tr>
<tr class="memitem:aea33812e6df79bf9e8f65234f9381853"><td class="memItemLeft" align="right" valign="top">virtual INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d04/class_mg_curve_string_aea33812e6df79bf9e8f65234f9381853.htm#aea33812e6df79bf9e8f65234f9381853">GetCount</a> ()</td></tr>
<tr class="memdesc:aea33812e6df79bf9e8f65234f9381853"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the number of segments in this curve string.  <a href="#aea33812e6df79bf9e8f65234f9381853"></a><br/></td></tr>
<tr class="memitem:a67a742da923c2e723d38ae805bad0142"><td class="memItemLeft" align="right" valign="top">virtual INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d04/class_mg_curve_string_a67a742da923c2e723d38ae805bad0142.htm#a67a742da923c2e723d38ae805bad0142">GetDimension</a> ()</td></tr>
<tr class="memdesc:a67a742da923c2e723d38ae805bad0142"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a href="#a67a742da923c2e723d38ae805bad0142"></a><br/></td></tr>
<tr class="memitem:ade7ea3ec844e28daa7f8774a48ad9722"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../d9/d88/class_mg_coordinate.htm">MgCoordinate</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d04/class_mg_curve_string_ade7ea3ec844e28daa7f8774a48ad9722.htm#ade7ea3ec844e28daa7f8774a48ad9722">GetEndCoordinate</a> ()</td></tr>
<tr class="memdesc:ade7ea3ec844e28daa7f8774a48ad9722"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a href="#ade7ea3ec844e28daa7f8774a48ad9722"></a><br/></td></tr>
<tr class="memitem:aaa288877f91f907614377946eeee1f3e"><td class="memItemLeft" align="right" valign="top">virtual INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d04/class_mg_curve_string_aaa288877f91f907614377946eeee1f3e.htm#aaa288877f91f907614377946eeee1f3e">GetGeometryType</a> ()</td></tr>
<tr class="memdesc:aaa288877f91f907614377946eeee1f3e"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a href="#aaa288877f91f907614377946eeee1f3e"></a><br/></td></tr>
<tr class="memitem:af0e9e2cc95c894262db9c57f318964bd"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../d9/d47/class_mg_curve_segment.htm">MgCurveSegment</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d04/class_mg_curve_string_af0e9e2cc95c894262db9c57f318964bd.htm#af0e9e2cc95c894262db9c57f318964bd">GetSegment</a> (INT32 index)</td></tr>
<tr class="memdesc:af0e9e2cc95c894262db9c57f318964bd"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a href="#af0e9e2cc95c894262db9c57f318964bd"></a><br/></td></tr>
<tr class="memitem:a4a4d9978feab7da8c85ca16de3c90e72"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../d9/d88/class_mg_coordinate.htm">MgCoordinate</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d04/class_mg_curve_string_a4a4d9978feab7da8c85ca16de3c90e72.htm#a4a4d9978feab7da8c85ca16de3c90e72">GetStartCoordinate</a> ()</td></tr>
<tr class="memitem:ac1419f725a5c691507c01b4a0621ef0b"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d04/class_mg_curve_string_ac1419f725a5c691507c01b4a0621ef0b.htm#ac1419f725a5c691507c01b4a0621ef0b">IsClosed</a> ()</td></tr>
<tr class="memitem:ac0d8d92118b2085a008c0debc96142c7"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d04/class_mg_curve_string_ac0d8d92118b2085a008c0debc96142c7.htm#ac0d8d92118b2085a008c0debc96142c7">IsEmpty</a> ()</td></tr>
<tr class="memdesc:ac0d8d92118b2085a008c0debc96142c7"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a href="#ac0d8d92118b2085a008c0debc96142c7"></a><br/></td></tr>
<tr class="memitem:a425f777de835a3564f72d82e6b4f4c89"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../dc/d21/class_mg_geometric_entity.htm">MgGeometricEntity</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d04/class_mg_curve_string_a425f777de835a3564f72d82e6b4f4c89.htm#a425f777de835a3564f72d82e6b4f4c89">Transform</a> (<a class="el" href="../../d9/dd6/class_mg_transform.htm">MgTransform</a> *transform)</td></tr>
<tr class="memdesc:a425f777de835a3564f72d82e6b4f4c89"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a transformed copy of this geometric entity.  <a href="#a425f777de835a3564f72d82e6b4f4c89"></a><br/></td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>An <a class="el" href="../../de/d04/class_mg_curve_string.htm" title="An MgCurveString is composed of one or more curve segments.">MgCurveString</a> is composed of one or more curve segments. </p>
<dl class="section remark"><dt>Remarks:</dt><dd>The curve segments are connected to one another so that the end point of each segment is the start point of the next segment in the segment list. The end point of the last segment in the ring is not the start point of the first segment. That is the curve string is not closed. <br/>
 An object of this type is constructed by calling the non-static <a class="el" href="../../d4/d46/class_mg_geometry_factory_a8f928f0d91f963e56c4d120f1800f8f0.htm#a8f928f0d91f963e56c4d120f1800f8f0" title="Creates a curve polygon from an outer ring and a collection of inner rings.">MgGeometryFactory::CreateCurvePolygon()</a> method and, once constructed, is immutable.</dd></dl>
<div class="PhpExample">
<b>Example (PHP)</b>
<br>
 The following code shows the construction of a curve string, which has a circular arc and a linear segment</p>
<div class="fragment"><pre class="fragment"> $geometryFactory = <span class="keyword">new</span> <a class="code" href="../../d4/d46/class_mg_geometry_factory.htm" title="The MgGeometryFactory class is used to construct objects whose classes are derived from MgGeometry...">MgGeometryFactory</a>();
 $coordinateCollection = <span class="keyword">new</span> <a class="code" href="../../db/d6e/class_mg_coordinate_collection.htm" title="MgCoordinateCollection provides support for defining an ordered set of coordinates.">MgCoordinateCollection</a>();
 $curveSegmentCollection = <span class="keyword">new</span> <a class="code" href="../../d9/dc6/class_mg_curve_segment_collection.htm" title="MgCurveSegmentCollection provides support for defining an ordered set of curve segments.">MgCurveSegmentCollection</a>();
 $wktReaderWriter = <span class="keyword">new</span> <a class="code" href="../../d5/da0/class_mg_wkt_reader_writer.htm" title="Translates a string in AGF (Autodesk Geometry Format) Text format into an MgGeometry object and vice ...">MgWktReaderWriter</a>();

 <span class="comment">// create the circular arc</span>
 $startCoordinate = $geometryFactory-&gt;CreateCoordinateXY(0,2);
 $controlCoordinate = $geometryFactory-&gt;CreateCoordinateXY(2,4);
 $endCoordinate = $geometryFactory-&gt;CreateCoordinateXY(4,2);
 $arcSegment = $geometryFactory-&gt;CreateArcSegment($startCoordinate,
 $endCoordinate, $controlCoordinate);
 $index = $curveSegmentCollection-&gt;Add($arcSegment);
 echo <span class="stringliteral">&quot;Arc segment added to curve segment collection at index: $index\n&quot;</span>;

 <span class="comment">// create linear segment</span>
 <span class="comment">// note that the first coordinate is the same as the last</span>
 <span class="comment">// coordinate of the circular arc</span>
 $coordinate = $geometryFactory-&gt;CreateCoordinateXY(4,2);
 $index = $coordinateCollection-&gt;Add($coordinate);
 echo <span class="stringliteral">&quot;Coordinate added to coordinate collection at index: $index\n&quot;</span>;
 $coordinate = $geometryFactory-&gt;CreateCoordinateXY(2,0);
 $index = $coordinateCollection-&gt;Add($coordinate);
 echo <span class="stringliteral">&quot;Coordinate added to coordinate collection at index: $index\n&quot;</span>;
 $linearSegment = $geometryFactory-&gt;CreateLinearSegment($coordinateCollection);
 $index = $curveSegmentCollection-&gt;Add($linearSegment);
 echo <span class="stringliteral">&quot;Linear segment added to curve segment collection at index: $index\n&quot;</span>;

 <span class="comment">// create curve string</span>
 $curveString = $geometryFactory-&gt;CreateCurveString($curveSegmentCollection);

 <span class="comment">// print out the Agf Text string for the geometry</span>
 $curveStringAgfText = $wktReaderWriter-&gt;Write($curveString);
 echo <span class="stringliteral">&quot;AGF Text representation of curve string: $curveStringAgfText\n&quot;</span>;
</pre></div> </div>
<div class="CSharpExample">
<b>Example (C#)</b>
<br>
 The following code shows the construction of a curve string, which has a circular arc and a linear segment </p>
<div class="fragment"><pre class="fragment"> <span class="keyword">using</span> OSGeo.MapGuide;
 <span class="keyword">private</span> <a class="code" href="../../d5/da0/class_mg_wkt_reader_writer.htm" title="Translates a string in AGF (Autodesk Geometry Format) Text format into an MgGeometry object and vice ...">MgWktReaderWriter</a> wktReaderWriter;
 <span class="keyword">private</span> <a class="code" href="../../d4/d46/class_mg_geometry_factory.htm" title="The MgGeometryFactory class is used to construct objects whose classes are derived from MgGeometry...">MgGeometryFactory</a> geometryFactory;
 <span class="keyword">private</span> <a class="code" href="../../de/d04/class_mg_curve_string.htm" title="An MgCurveString is composed of one or more curve segments.">MgCurveString</a> csAs001120Ls203132;
 <span class="comment">// the following arrays are used for segments of a curve string</span>
 <span class="comment">// the first coordinate in each array is actually a flag</span>
 <span class="comment">// 0 indicates an arc segment and 1 indicates a linear segment</span>
 <span class="keyword">private</span> <span class="keywordtype">double</span>[,] as001120 = { { 0, 0 }, { 0, 0 }, { 1, 1 }, { 2, 0 } };
 <span class="keyword">private</span> <span class="keywordtype">double</span>[,] ls203132 = { { 1, 1 }, { 2, 0 }, { 3, 1 }, { 3, 2 } };
 <span class="keyword">private</span> <span class="keywordtype">double</span>[][,] csAs001120Ls203132Data;
 <span class="keyword">private</span> String geometryAgfText;

 <span class="comment">// The following BNF is for the construction of a string representation</span>
 <span class="comment">// of the geometry.</span>
 <span class="comment">// The &lt;StartPoint&gt; for every segment except the first is equal</span>
 <span class="comment">// to the end point of the previous segment.</span>
 <span class="comment">// So the &lt;StartPoint&gt; must be explicit for the first segment</span>
 <span class="comment">// and implicit for every segment thereafter.</span>
 <span class="comment">// When using the API to construct the geometry, however,</span>
 <span class="comment">// you must make the start point explicit in the data.</span>
 <span class="comment">// So in the data the end point from the previous segment and</span>
 <span class="comment">// the start point from the next segment are identical.</span>
 <span class="comment">// &lt;CurveString&gt; ::= &#39;(&#39; &lt;StartPoint&gt; &#39;(&#39; &lt;CurveSegmentCollection&gt; &#39;)&#39; &#39;)&#39;</span>
 <span class="comment">// See CreateACurveSegmentCollectionXY() for the rest of the BNF.</span>
 <span class="keyword">public</span> <a class="code" href="../../de/d04/class_mg_curve_string.htm" title="An MgCurveString is composed of one or more curve segments.">MgCurveString</a> CreateACurveStringXY(<span class="keywordtype">double</span>[][,] curveStringData)
 {
     <a class="code" href="../../d9/dc6/class_mg_curve_segment_collection.htm" title="MgCurveSegmentCollection provides support for defining an ordered set of curve segments.">MgCurveSegmentCollection</a> segments = CreateACurveSegmentCollectionXY(curveStringData);
     <span class="keywordflow">return</span> geometryFactory.<a class="code" href="../../d4/d46/class_mg_geometry_factory_a9180ec587069549d53b337181bdf0fcb.htm#a9180ec587069549d53b337181bdf0fcb" title="Creates a curve string from a collection of curve segments.">CreateCurveString</a>(segments);
 }

 <span class="comment">// &lt;CurveSegmentCollection&gt; ::= &lt;CurveSegment&gt;</span>
 <span class="comment">//                              | &lt;CurveSegmentCollection&gt; &#39;,&#39; &lt;CurveSegment&gt;</span>
 <span class="comment">// &lt;CurveSegment&gt; ::= CIRCULARARCSEGMENT &#39;(&#39; &lt;2ndPoint&gt; &#39;,&#39; &lt;EndAndStartPointNextSeg&gt; &#39;)&#39;</span>
 <span class="comment">//                    | LINESTRINGSEGMENT &#39;(&#39; &lt;LineSegmentPointCollection&gt; &#39;)&#39;</span>
 <span class="comment">// &lt;LineSegmentPointCollection&gt; ::= &lt;EndAndStartPointNextSeg&gt;</span>
 <span class="comment">//                    | &lt;2ndPoint&gt;, &lt;EndAndStartPointNextSeg&gt;</span>
 <span class="comment">//                    | &lt;2ndPoint&gt;, &lt;PointCollection&gt;, &lt;EndAndStartPointNextSeg&gt;</span>
 <span class="keyword">public</span> <a class="code" href="../../d9/dc6/class_mg_curve_segment_collection.htm" title="MgCurveSegmentCollection provides support for defining an ordered set of curve segments.">MgCurveSegmentCollection</a> CreateACurveSegmentCollectionXY(<span class="keywordtype">double</span>[][,] curveStringData)
 {
     <a class="code" href="../../d9/dc6/class_mg_curve_segment_collection.htm" title="MgCurveSegmentCollection provides support for defining an ordered set of curve segments.">MgCurveSegmentCollection</a> segments = <span class="keyword">new</span> <a class="code" href="../../d9/dc6/class_mg_curve_segment_collection.htm" title="MgCurveSegmentCollection provides support for defining an ordered set of curve segments.">MgCurveSegmentCollection</a>();
     <a class="code" href="../../db/d6e/class_mg_coordinate_collection.htm" title="MgCoordinateCollection provides support for defining an ordered set of coordinates.">MgCoordinateCollection</a> coords = <span class="keyword">new</span> <a class="code" href="../../db/d6e/class_mg_coordinate_collection.htm" title="MgCoordinateCollection provides support for defining an ordered set of coordinates.">MgCoordinateCollection</a>();
     <span class="keywordtype">double</span>[,] segmentData;
     <a class="code" href="../../d9/d88/class_mg_coordinate.htm" title="MgCoordinate is an abstract base class used to represent the Cartesian coordinates of a geometry...">MgCoordinate</a> start;
     <a class="code" href="../../d9/d88/class_mg_coordinate.htm" title="MgCoordinate is an abstract base class used to represent the Cartesian coordinates of a geometry...">MgCoordinate</a> control;
     <a class="code" href="../../d9/d88/class_mg_coordinate.htm" title="MgCoordinate is an abstract base class used to represent the Cartesian coordinates of a geometry...">MgCoordinate</a> end;
     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; curveStringData.GetLength(0); i++)
     {
         segmentData = curveStringData[i];
         <span class="comment">// 0 indicates that rest of data in array is for an arc segment</span>
         <span class="keywordflow">if</span> (segmentData[0, 0] == 0)
         {
             start = geometryFactory.<a class="code" href="../../d4/d46/class_mg_geometry_factory_ae29923f88827c3869221d42ac0b1ed36.htm#ae29923f88827c3869221d42ac0b1ed36" title="Creates an MgCoordinate object with Dimension = XY, X = x, Y = y.">CreateCoordinateXY</a>(segmentData[1, 0],
                 segmentData[1, 1]);
             control = geometryFactory.<a class="code" href="../../d4/d46/class_mg_geometry_factory_ae29923f88827c3869221d42ac0b1ed36.htm#ae29923f88827c3869221d42ac0b1ed36" title="Creates an MgCoordinate object with Dimension = XY, X = x, Y = y.">CreateCoordinateXY</a>(segmentData[2, 0],
                 segmentData[2, 1]);
             end = geometryFactory.<a class="code" href="../../d4/d46/class_mg_geometry_factory_ae29923f88827c3869221d42ac0b1ed36.htm#ae29923f88827c3869221d42ac0b1ed36" title="Creates an MgCoordinate object with Dimension = XY, X = x, Y = y.">CreateCoordinateXY</a>(segmentData[3, 0],
                 segmentData[3, 1]);
             segments.<a class="code" href="../../d9/dc6/class_mg_curve_segment_collection_aeca4dea889d46a36127b044c4af50613.htm#aeca4dea889d46a36127b044c4af50613" title="Adds the specified coordinate to the end of the collection.">Add</a>(geometryFactory.<a class="code" href="../../d4/d46/class_mg_geometry_factory_a89eca29d7a74a3eee246b27be220a2e7.htm#a89eca29d7a74a3eee246b27be220a2e7" title="Creates an arc segment from start, end, and control coordinates.">CreateArcSegment</a>(start, end, control));
         }
         <span class="keywordflow">else</span> <span class="keywordflow">if</span> (segmentData[0, 0] == 1)
         {
             <span class="keywordflow">for</span> (<span class="keywordtype">int</span> j = 1; j &lt; segmentData.GetLength(0); j++)
             {
                 coords.<a class="code" href="../../db/d6e/class_mg_coordinate_collection_ab222b691dbac249de2c82a87b26b2f64.htm#ab222b691dbac249de2c82a87b26b2f64" title="Adds the specified coordinate to the end of the collection.">Add</a>(geometryFactory.<a class="code" href="../../d4/d46/class_mg_geometry_factory_ae29923f88827c3869221d42ac0b1ed36.htm#ae29923f88827c3869221d42ac0b1ed36" title="Creates an MgCoordinate object with Dimension = XY, X = x, Y = y.">CreateCoordinateXY</a>(segmentData[j, 0],
                     segmentData[j, 1]));
             }
             segments.<a class="code" href="../../d9/dc6/class_mg_curve_segment_collection_aeca4dea889d46a36127b044c4af50613.htm#aeca4dea889d46a36127b044c4af50613" title="Adds the specified coordinate to the end of the collection.">Add</a>(geometryFactory.<a class="code" href="../../d4/d46/class_mg_geometry_factory_a8049054e9544c41707b68f4745990efe.htm#a8049054e9544c41707b68f4745990efe" title="Creates a linear segment from a collection of coordinates.">CreateLinearSegment</a>(coords));
             coords.<a class="code" href="../../db/d6e/class_mg_coordinate_collection_a278f741f7e9f35d3264400ab8e2c6998.htm#a278f741f7e9f35d3264400ab8e2c6998" title="Removes all coordinates from the collection.">Clear</a>();
         }
         <span class="keywordflow">else</span>
         {
             <span class="comment">// should throw exception</span>
             <span class="keywordflow">return</span> null;
         }
     }
     <span class="keywordflow">return</span> segments;
 }

 geometryFactory = <span class="keyword">new</span> <a class="code" href="../../d4/d46/class_mg_geometry_factory.htm" title="The MgGeometryFactory class is used to construct objects whose classes are derived from MgGeometry...">MgGeometryFactory</a>();
 csAs001120Ls203132Data = <span class="keyword">new</span> <span class="keywordtype">double</span>[2][,];
 csAs001120Ls203132Data[0] = as001120;
 csAs001120Ls203132Data[1] = ls203132;
 csAs001120Ls203132 = CreateACurveStringXY(csAs001120Ls203132Data);

 <span class="comment">// print out the Agf Text string for the geometry</span>
 wktReaderWriter = <span class="keyword">new</span> <a class="code" href="../../d5/da0/class_mg_wkt_reader_writer.htm" title="Translates a string in AGF (Autodesk Geometry Format) Text format into an MgGeometry object and vice ...">MgWktReaderWriter</a>();
 geometryAgfText = wktReaderWriter.<a class="code" href="../../d5/da0/class_mg_wkt_reader_writer_a025632da0081b208162c1cc2d34e355c.htm#a025632da0081b208162c1cc2d34e355c" title="Writes a geometry object to a string in AGF Text format.">Write</a>(csAs001120Ls203132);
 <span class="comment">// geometryAgfText now contains:</span>
 <span class="comment">// &quot;CURVESTRING XY (0 0(CIRCULARARCSEGMENT(1 1, 2 0), LINESTRINGSEGMENT(3 1, 3 2)))&quot;</span>
</pre></div> </div>
 </div></div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="../../de/d04/class_mg_curve_string.htm">MgCurveString</a>      </li>

    <li class="footer">Comments or suggestions? Send us <a href="http://mapguide.osgeo.org/feedback">feedback</a>. | Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.0 </li>
   </ul>
 </div>


</body>
</html>

