<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>MapGuide API Reference: Filters and Expressions</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link href="../../mg_open_source.css" rel="stylesheet" type="text/css" />
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">MapGuide API Reference
   
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.8.0 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
<script type="text/javascript" src="../../dynsections.js"></script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../modules.htm"><span>Modules</span></a></li>
      <li><a href="../../annotated.htm"><span>Classes</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('da/ddd/group___filters_and_expressions.htm','../../');
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Friends</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Filters and Expressions</div>  </div>
<div class="ingroups"><a class="el" href="../../de/ddf/group___feature___service___module.htm">Feature Service</a></div></div><!--header-->
<div class="contents">
<p>Use a filter to select a subset of the features in a datastore. Filters are used in calls to <a class="el" href="../../d5/d10/class_mg_feature_service_acd90e83ea6f7d1c0c68b8547c7ec6286.htm#acd90e83ea6f7d1c0c68b8547c7ec6286" title="Selects features from a feature source according to the criteria set in the MgFeatureQueryOptions arg...">MgFeatureService::SelectFeatures()</a> and <a class="el" href="../../d5/d10/class_mg_feature_service_aacdbf149e721d82862f799742feb3ed5.htm#aacdbf149e721d82862f799742feb3ed5" title="Selects groups of features from a feature source and applies filters to each of the groups according ...">MgFeatureService::SelectAggregate()</a>. There are two types of filters: basic and spatial. </p>
<h2>Spatial Filter </h2>
<p>A spatial filter relates two geometries by way of a spatial operator. A spatial filter is set by a call to <a class="el" href="../../d8/dcc/class_mg_feature_query_options_a3e8bc4869a6eae290c4d06ebd91823ca.htm#a3e8bc4869a6eae290c4d06ebd91823ca" title="Use this method to select features whose geometry property satisfies the relationship argument to the...">MgFeatureQueryOptions::SetSpatialFilter()</a> or <a class="el" href="../../d8/dcc/class_mg_feature_query_options_a3e8bc4869a6eae290c4d06ebd91823ca.htm#a3e8bc4869a6eae290c4d06ebd91823ca" title="Use this method to select features whose geometry property satisfies the relationship argument to the...">MgFeatureAggregateOptions::SetSpatialFilter()</a>. These methods take 3 arguments: a name which identifies a geometry property of a feature in a datastore, a geometry object, and a spatial operation identifier. The effect of the filter is to select features from the datastore whose geometry property is related according to the spatial operator to the geometry object argument. For example, if the spatial operator is <a class="el" href="../../d7/d86/class_mg_feature_spatial_operations_a64d486f15d2626fa66b6b39589343a2a.htm#a64d486f15d2626fa66b6b39589343a2a">MgFeatureSpatialOperations::Within</a>, and the geometry object's WKT representation is POLYGON((0 0, 2 0, 2 2, 0 2, 0 0)), then the effect of the filter is to select those features which have geometries within this polygon. </p>
<h2>Basic Filter </h2>
<p>Use non-geometry feature property names, data values, and operators to construct a filter string which is passed as an argument to the MgFeatureQueryOption::SetFilter() or <a class="el" href="../../d8/dcc/class_mg_feature_query_options_afbe0c7c10fd849f52a10eec663b0640c.htm#afbe0c7c10fd849f52a10eec663b0640c" title="Sets the filter for this select operation. The filter acts like the where clause in an SQL Select sta...">MgFeatureAggregateOptions::SetFilter()</a> method. For example, if FEATID is a feature property name, then the filter "FEATID &gt; 20" selects the features whose FEATID has a value greater than 20. </p>
<h2>Expressions </h2>
<p>Expressions are subcomponents of a basic filter. One expression might constitute the entire filter, or several expressions can be strung together using operators. </p>
<h2>Basic Filter Grammar </h2>
<pre>
&lt;Filter&gt; ::= '(' Filter ')'
| &lt;LogicalOperator&gt;
| &lt;SearchCondition&gt;
&lt;LogicalOperator&gt; ::= &lt;BinaryLogicalOperator&gt;
| &lt;UnaryLogicalOperator&gt;</pre><pre>&lt;BinaryLogicalOperator&gt; ::=</pre><pre>&lt;Filter&gt; &lt;BinaryLogicalOperations&gt; &lt;Filter&gt;</pre><pre>&lt;SearchCondition&gt; ::= &lt;InCondition&gt;
| &lt;ComparisonCondition&gt;
| &lt;GeometricCondition&gt;
| &lt;NullCondition&gt;</pre><pre>&lt;InCondition&gt; ::= &lt;Identifier&gt; IN '('
ValueExpressionCollection ')'</pre><pre>&lt;ValueExpressionCollection&gt; ::= &lt;ValueExpression&gt;
| &lt;ValueExpressionCollection&gt; ',' &lt;ValueExpression&gt;</pre><pre>&lt;ComparisonCondition&gt; ::=</pre><pre>&lt;Expression&gt; &lt;ComparisonOperations&gt; &lt;Expression&gt;</pre><pre>&lt;GeometricCondition&gt; ::= &lt;SpatialCondition&gt; |
&lt;DistanceCondition&gt;</pre><pre>&lt;NullCondition&gt; ::= &lt;Identifier&gt; NULL</pre><pre>&lt;SpatialCondition&gt; ::= &lt;Identifier&gt; &lt;SpatialOperations&gt;
&lt;Expression&gt;</pre><pre>&lt;DistanceCondition&gt; ::= &lt;Identifier&gt; &lt;DistanceOperations&gt;
&lt;Expression&gt; &lt;distance&gt;</pre><pre>&lt;UnaryLogicalOperator&gt; ::= NOT &lt;Filter&gt;</pre><pre>&lt;BinaryLogicalOperations&gt; ::= AND | OR</pre><pre>&lt;ComparisionOperations&gt; ::= = 
| &lt;&gt;
| &gt;
| &gt;=
| &lt;
| &lt;=
| LIKE</pre><pre>&lt;SpatialOperations&gt; ::= CONTAINS | CROSSES | DISJOINT |
EQUALS | INTERSECTS | OVERLAPS | TOUCHES | WITHIN | COVEREDBY
| INSIDE</pre><pre>&lt;DistanceOperations&gt; ::= BEYOND | WITHINDISTANCE</pre><pre>&lt;distance&gt; ::= BEYOND | WITHINDISTANCE
</pre> <h2>Expression Grammar </h2>
<pre>
&lt;Expression&gt; ::= '(' Expression ')'
| &lt;UnaryExpression&gt;
| &lt;BinaryExpression&gt;
| &lt;Function&gt;
| &lt;Identifier&gt;
| &lt;ValueExpression&gt;</pre><pre>&lt;BinaryExpression&gt; ::= &lt;Expression&gt; '+' &lt;Expression&gt;
| &lt;Expression&gt; '-' &lt;Expression&gt;
| &lt;Expression&gt; '*' &lt;Expression&gt;
| &lt;Expression&gt; '/' &lt;Expression&gt;</pre><pre>&lt;ValueExpression&gt; ::= &lt;LiteralValue&gt;</pre><pre>&lt;LiteralValue&gt; ::= &lt;GeometryValue&gt; | &lt;DataValue&gt;</pre><pre>&lt;GeometryValue&gt; ::= GEOMFROMTEXT '(' STRING ')'</pre><pre>&lt;DataValue&gt; ::= TRUE
| FALSE
| DATETIME
| DOUBLE
| INTEGER
| STRING
| BLOB
| CLOB
| NULL</pre><pre>&lt;Function&gt; ::= &lt;Identifier&gt; '(' &lt;ExpressionCollection&gt;
')'</pre><pre>&lt;ExpressionCollection&gt; ::=
| &lt;Expression&gt;
| &lt;ExpressionCollection&gt; ',' &lt;Expression&gt;</pre><pre>&lt;Identifier&gt; ::= IDENTIFIER</pre><pre>&lt;UnaryExpression&gt; ::= '-' &lt;Expression&gt;
</pre> <h2>Operator Precedence </h2>
<p>The operator precedence from highest to lowest is: Negate NOT<br/>
 Multiply Divide<br/>
 Add Subtract<br/>
 = &lt;&gt; &gt; &gt;= &lt; &lt;=<br/>
 AND<br/>
 OR </p>
<h2>Filter and Expression Keywords</h2>
<p>The following case-insensitive keywords are reserved in the language. That is, they cannot be used as identifier or function names: </p>
<p>AND BEYOND COMPARE CONTAINS COVEREDBY CROSSES DATA DISJOINT DISTANCE EQUALS FALSE GEOMFROMTEXT IN INSIDE INTERSECTS LIKE NOT NULL OR OVERLAPS RELATE SPATIAL TIME TIMESTAMP TOUCHES TRUE WITHIN WITHINDISTANCE </p>
<h2>STRING </h2>
<p>Strings are literal constants enclosed in single quotes. If you need to include a single quote character inside a string, you can double the character, for example, 'aaa''bbb'. </p>
<h2>IDENTIFIER </h2>
<p>An identifier can be any alphanumeric sequence of characters other than a keyword. Identifiers can be enclosed in double quotes to show special characters and white space. If you need to include a double quote character inside an identifier, you can double the character, for example "abc""def". </p>
<h2>INTEGER </h2>
<p>Integers allow only decimal characters with an optional unary minus sign. Unary plus is not supported. If an integer is out of the 32-bit precision range, it is converted to floating point. </p>
<h2>DOUBLE </h2>
<p>Floating point numbers have a decimal point, can be signed (-), and include an optional exponent (e{[0-9]}). </p>
<h2>DATETIME </h2>
<p>Date and time are parsed using the standard literal strings: </p>
<p>DATE 'YYYY-MM-DD' </p>
<p>TIME 'HH:MM:SS[.sss]' </p>
<p>TIMESTAMP 'YYYY-MM-DD HH:MM:SS[.sss]' </p>
<h2>CLOB/BLOB </h2>
<p>These data types are not currently supported. If you need to support binary input, use parameters. </p>
<h2>&lt;Function&gt; </h2>
<p>Some functions such as ceil, floor, concat, lower, and upper take as an argument the value of a property from a single feature and return a value related to the property value. </p>
<p>Some functions such as avg, count, max, min, stddev, and sum take as an argument the values of a property from multiple features and return a single value related to the values of the group of property arguments. </p>
<table  class="RuledTable">
<tr>
<th>Function </th><th>Description  </th></tr>
<tr>
<td>Double Avg(n) </td><td>Average value of n, ignoring nulls  </td></tr>
<tr>
<td>Int64 Ceil(Double) </td><td>Smallest integer &gt;= Double  </td></tr>
<tr>
<td>String Concat(Str1, Str2) </td><td>Concatenates Str1 and Str2  </td></tr>
<tr>
<td>Int64 Count(expression) </td><td>Number of features where expression is not null  </td></tr>
<tr>
<td>Int64 Floor(Double) </td><td>Largest integer &lt;= Double  </td></tr>
<tr>
<td>String Lower(Str) </td><td>Str with all lowercase letters  </td></tr>
<tr>
<td>Double Min(expression) </td><td>Minimum value of expression  </td></tr>
<tr>
<td>Double Max(expression) </td><td>Maximum value of expression  </td></tr>
<tr>
<td>Double Stddev(n) </td><td>Standard deviation of n, ignoring nulls  </td></tr>
<tr>
<td>Double Sum(n) </td><td>Sum of values of n  </td></tr>
<tr>
<td>String Upper(Str) </td><td>Str with all uppercase letters  </td></tr>
</table>
<h2>Examples</h2>
<p>PHP and C# sample code for the setting of filters for select operations is presented. The SQL expression equivalent to the PHP and C# code is also presented. </p>
<pre>
&lt;?php
$queryOptions = new MgFeatureQueryOptions();
$stringCollection = new MgStringCollection();
$wktReaderWriter = new MgWktReaderWriter();
?&gt;
</pre> <pre>
using OSGeo.MapGuide;
private <a class="el" href="../../d8/dcc/class_mg_feature_query_options.htm" title="Use this class to set filter criteria for selecting features from a datastore. Read the discussion of...">MgFeatureQueryOptions</a> queryOptions;
private <a class="el" href="../../da/d99/class_mg_string_collection.htm" title="This class represents a collection of strings. The collection maintains its own copy of strings...">MgStringCollection</a> stringCollection;
private <a class="el" href="../../d5/da0/class_mg_wkt_reader_writer.htm" title="Translates a string in AGF (Autodesk Geometry Format) Text format into an MgGeometry object and vice ...">MgWktReaderWriter</a> wktReaderWriter;
private String featClassName = "SdfFeatureClass";
private <a class="el" href="../../d6/d80/class_mg_resource_identifier.htm" title="Creates and manipulates resource identifiers.">MgResourceIdentifier</a> featureSrcResourceId;
private <a class="el" href="../../d5/d10/class_mg_feature_service.htm" title="Provides an abstraction layer for the storage and retrieval of feature data in a technology-independe...">MgFeatureService</a> featureService;</pre><pre>stringCollection = new MgStringCollection();
queryOptions = new MgFeatureQueryOptions();
// the feature source has already been installed in the repository
featureSrcResourceId = new <a class="el" href="../../d6/d80/class_mg_resource_identifier.htm" title="Creates and manipulates resource identifiers.">MgResourceIdentifier</a>("Library://PlatformApiDocTests/SdfFeatureClass.FeatureSource");
wktReaderWriter = new MgWktReaderWriter();
</pre> <h3>&lt;Identifier&gt; NULL </h3>
<p>SometimesNULL is a string property. If you have not given a value to it when inserting certain features and you apply the filter, sometimesNULL NULL, you select those features. If you have given a value to it when inserting other features and you apply the filter, NOT sometimesNULL NULL, you select those other features. </p>
<pre>
sqlplus&gt; select sometimesnull from featclass where sometimesnull is null;
</pre> <pre>
&lt;?php
$queryOptions-&gt;AddFeatureProperty("sometimesNULL");
$queryOptions-&gt;SetFilter("sometimesNULL NULL");
$featureReader = $featureService-&gt;SelectFeatures($featureSrcResourceId, $featClassName, $queryOptions);
# process $featureReader
$featureReader-&gt;Close();
?&gt;
</pre> <pre>
queryOptions.AddFeatureProperty("SometimesNull");
queryOptions.SetFilter("SometimesNull NULL");
featureReader = featureService.SelectFeatures(featureSrcResourceId, featClassName, queryOptions);
// process featureReader
featureReader.Close();
</pre> <pre>
sqlplus&gt; select sometimesnull from featclass where sometimesnull is not null;
</pre> <pre>
&lt;?php
$queryOptions-&gt;AddFeatureProperty("sometimesNULL");
$queryOptions-&gt;SetFilter("NOT sometimesNULL NULL");
$featureReader = $featureService-&gt;SelectFeatures($featureSrcResourceId, $featClassName, $queryOptions);
# process $featureReader
$featureReader-&gt;Close();
?&gt;
</pre> <pre>
queryOptions.AddFeatureProperty("SometimesNull");
queryOptions.SetFilter("NOT SometimesNull NULL");
featureReader = featureService.SelectFeatures(featureSrcResourceId, featClassName, queryOptions);
// process featureReader
featureReader.Close();
</pre> <h3>&lt;Identifier&gt; LIKE &lt;String&gt; </h3>
<p>Identifier is the name of a property whose type is <a class="el" href="../../d1/d70/class_mg_property_type_ae1045fd508df42dfa31e8b5eb8cc1565.htm#ae1045fd508df42dfa31e8b5eb8cc1565" title="Type name for a string property (MgStringProperty).">MgPropertyType::String</a>. String contains a pattern. A percent character (%) in a pattern matches zero or more characters. An underscore character (_) matches one character. </p>
<p>Description is a string property. There are 2 features with this property in the datastore, and the contents of the two properties are: "POINT XY (1 1)" and "POLYGON XY ((0 0, 2 0, 2 2, 0 2, 0 0))". </p>
<p>The filter, Description LIKE 'POLYGON', returns "POLYGON XY ((0 0, 2 0, 2 2, 0 2, 0 0))", the filter, NOT Description LIKE 'POLYGON', returns "POINT XY (1 1)", and the filter, Description LIKE 'POL_GON', returns "POLYGON XY ((0 0, 2 0, 2 2, 0 2, 0 0))". </p>
<pre>
sqlplus&gt; select Description from featclass where Description LIKE 'POLYGON';
</pre> <pre>
$queryOptions-&gt;AddFeatureProperty("Description");
$queryOptions-&gt;SetFilter("Description LIKE 'POLYGON'");
$featureReader = $featureService-&gt;SelectFeatures($featureSrcResourceId, $featClassName, $queryOptions);
# process $featureReader
$featureReader-&gt;Close();
</pre> <pre>
queryOptions.AddFeatureProperty("Description");
queryOptions.SetFilter("Description LIKE 'POLYGON'");
featureReader = featureService.SelectFeatures(featureSrcResourceId, featClassName, queryOptions);
// process featureReader
featureReader.Close();
</pre> <pre>
sqlplus&gt; select Description from featclass where Description NOT LIKE 'POLYGON';
</pre> <pre>
$queryOptions-&gt;AddFeatureProperty("Description");
$queryOptions-&gt;SetFilter("NOT Description LIKE 'POLYGON'");
$featureReader = $featureService-&gt;SelectFeatures($featureSrcResourceId, $featClassName, $queryOptions);
# process $featureReader
$featureReader-&gt;Close();
</pre> <pre>
queryOptions.AddFeatureProperty("Description");
queryOptions.SetFilter("NOT Description LIKE 'POLYGON'");
featureReader = featureService.SelectFeatures(featureSrcResourceId, featClassName, queryOptions);
// process featureReader
featureReader.Close();
</pre> <pre>
sqlplus&gt; select Description from featclass where Description LIKE 'POL_GON';
</pre> <pre>
$queryOptions-&gt;AddFeatureProperty("Description");
$queryOptions-&gt;SetFilter("Description LIKE 'POL_GON'");
$featureReader = $featureService-&gt;SelectFeatures($featureSrcResourceId, $featClassName, $queryOptions);
# process $featureReader
$featureReader-&gt;Close();
</pre> <pre>
queryOptions.AddFeatureProperty("Description");
queryOptions.SetFilter("Description LIKE 'POL_GON'");
featureReader = featureService.SelectFeatures(featureSrcResourceId, featClassName, queryOptions);
// process featureReader
featureReader.Close();
</pre> <h3>&lt;Identifier&gt; IN ( &lt;ValueExpressionCollection&gt; ) </h3>
<p>anInt16 is an Int16 property. In one feature instance the value of anInt16 is -7033. If you apply &lt;filter&gt;anInt16 IN ( -5995, -7033 ), you select this feature. </p>
<pre>
sqlplus&gt; select anInt16 from featclass where anInt16 in ( -5995, -7033 );
</pre> <pre>
&lt;?php
$queryOptions-&gt;AddFeatureProperty("anInt16");
$queryOptions-&gt;SetFilter("anInt16 IN ( -5995, -7033 )");
$featureReader = $featureService-&gt;SelectFeatures($featureSrcResourceId, $featClassName, $queryOptions);
# process $featureReader
$featureReader-&gt;Close();
?&gt;
</pre> <pre>
queryOptions.AddFeatureProperty("anInt16");
queryOptions.SetFilter("anInt16 IN ( -5995, -7033 )");
featureReader = featureService.SelectFeatures(featureSrcResourceId, featClassName, queryOptions);
// process featureReader
featureReader.Close();
</pre> <h3>&lt;Identifier&gt; &gt; &lt;DataValue&gt;</h3>
<p>featid is an identity property. If you apply the filter, featid &gt; 20, you select the features whose featid has a value &gt; 20. If you apply the filter, featid &gt; 0 AND featid &lt; 5, you select the features whose featid belongs to { 1, 2, 3, 4}. If you apply the filter, featid &lt; 3 OR featid &gt; 3, you select features whose featid is not 3. </p>
<p>aDateTime is a date property. There is a feature whose aDateTime property has the value 9/20/2005::10:9:34:0. If you apply the filter, aDateTime &lt; '2005-09-21', you select this feature. </p>
<pre>
sqlplus&gt; select anInt16 from featclass where adatetime &lt; '21-SEP-05';
</pre> <pre>
&lt;?php
$queryOptions-&gt;AddFeatureProperty("anInt16");
$queryOptions-&gt;SetFilter("aDateTime &lt; '2005-09-21'");
$featureReader = $featureService-&gt;SelectFeatures($featureSrcResourceId, $featClassName, $queryOptions);
# process $featureReader
$featureReader-&gt;Close();
?&gt;
</pre> <pre>
queryOptions.AddFeatureProperty("anInt16");
queryOptions.SetFilter("aDateTime &lt; '2005-09-21'");
featureReader = featureService.SelectFeatures(featureSrcResourceId, featClassName, queryOptions);
// process featureReader
featureReader.Close();
</pre> <h3>&lt;Expression&gt; &lt; &lt;DataValue&gt;</h3>
<p>anInt16 is an Int16 property. Two features have non-NULL values for this property. One has a value -7033, and the other -5995. If you apply the filter, ( anInt16 + 1000 ) &lt; -5995, you select the feature whose anInt16 property has the value -7033. The parentheses in this filter are optional because operator precedence would dictate that the filter, anInt16 + 1000 &lt; -5995, is equivalent. </p>
<pre>
sqlplus&gt; select anInt16 from featclass where anInt16 + 1000 &lt; -5995;
</pre> <pre>
&lt;?php
$queryOptions-&gt;AddFeatureProperty("anInt16");
$queryOptions-&gt;SetFilter("anInt16 + 1000 &lt; -5995");
$featureReader = $featureService-&gt;SelectFeatures($featureSrcResourceId, $featClassName, $queryOptions);
# process $featureReader
$featureReader-&gt;Close();
?&gt;
</pre> <pre>
queryOptions.AddFeatureProperty("anInt16");
queryOptions.SetFilter("anInt16 + 1000 &lt; -5995");
featureReader = featureService.SelectFeatures(featureSrcResourceId, featClassName, queryOptions);
// process featureReader
featureReader.Close();
</pre> <h3>&lt;FunctionValue&gt; = &lt;DataValue&gt;</h3>
<p>aDouble is a double property. One feature has aDouble property with a value of 8103.08393. If you apply the filter, ceil(aDouble) = 8104, you select this feature. </p>
<pre>
sqlplus&gt; select aDouble from featclass where ceil(aDouble) = 8104;
</pre> <pre>
&lt;?php
$queryOptions-&gt;AddFeatureProperty("aDouble");
$queryOptions-&gt;SetFilter("ceil(aDouble) = 8104");
$featureReader = $featureService-&gt;SelectFeatures($featureSrcResourceId, $featClassName, $queryOptions);
# process $featureReader
$featureReader-&gt;Close();
?&gt;
</pre> <pre>
queryOptions.AddFeatureProperty("aDouble");
queryOptions.SetFilter("ceil(aDouble) = 8104");
featureReader = featureService.SelectFeatures(featureSrcResourceId, featClassName, queryOptions);
// process featureReader
featureReader.Close();
</pre> <h3>Group Function</h3>
<p>aDouble is a double property. sum is a group function. sum(aDouble) sums the values of the aDouble property taken from a group of features. </p>
<pre>
sqlplus&gt; select sum(aDouble) from featclass;
</pre> <pre>
&lt;?php
$queryOptions-&gt;AddComputedProperty("sumDbl", "sum(aDouble)");
$featureReader = $featureService-&gt;SelectFeatures($featureSrcResourceId, $featClassName, $queryOptions);
# process $featureReader
$featureReader-&gt;Close();
?&gt;
</pre> <pre>
queryOptions.AddComputedProperty("sumDbl", "sum(aDouble)");
featureReader = featureService.SelectFeatures(featureSrcResourceId, featClassName, queryOptions);
// process featureReader
featureReader.Close();
</pre> <h3>Ordering</h3>
<p>aDouble is a double property. anInt32Key is the identity property. The first example returns aDouble values in ascending order, and the second example returns them in descending order. </p>
<h4>Ascending</h4>
<pre>
sqlplus&gt; select anint32key,adouble from tuxuniversalclassxy order by adouble ASC;
</pre> <pre>
&lt;?php
$queryOptions-&gt;AddFeatureProperty("aDouble");
$queryOptions-&gt;AddFeatureProperty("anInt32Key");
$stringCollection-&gt;Add("aDouble");
$queryOptions-&gt;SetOrderingFilter($stringCollection, <a class="el" href="../../d1/d1a/class_mg_ordering_option_a1904d18a0cc2a96b57a5a64c75071335.htm#a1904d18a0cc2a96b57a5a64c75071335" title="Signifies that the features are returned in ascending order relative to the properties specified in t...">MgOrderingOption::Ascending</a>);
$featureReader = $featureService-&gt;SelectFeatures($featureSrcResourceId, $featClassName, $queryOptions);
# process $featureReader
$featureReader-&gt;Close();
?&gt;
</pre> <pre>
queryOptions.AddFeatureProperty("aDouble");
queryOptions.AddFeatureProperty("anInt32Key");
stringCollection.Add("aDouble");
queryOptions.SetOrderingFilter(stringCollection, MgOrderingOption::Ascending);
featureReader = $featureService.SelectFeatures(featureSrcResourceId, featClassName, queryOptions);
// process $featureReader
featureReader.Close();
</pre> <h4>Descending</h4>
<pre>
sqlplus&gt; select anint32key,adouble from tuxuniversalclassxy order by adouble DESC;
</pre> <pre>
&lt;?php
$queryOptions-&gt;AddFeatureProperty("aDouble");
$queryOptions-&gt;AddFeatureProperty("anInt32Key");
$stringCollection-&gt;Add("aDouble");
$queryOptions-&gt;SetOrderingFilter($stringCollection, <a class="el" href="../../d1/d1a/class_mg_ordering_option_a23f29877319d7abfa97566be9da4d2e2.htm#a23f29877319d7abfa97566be9da4d2e2" title="Signifies that the features are returned in descending order relative to the properties specified in ...">MgOrderingOption::Descending</a>);
$featureReader = $featureService-&gt;SelectFeatures($featureSrcResourceId, $featClassName, $queryOptions);
# process $featureReader
$featureReader-&gt;Close();
?&gt;
</pre> <pre>
queryOptions.AddFeatureProperty("aDouble");
queryOptions.AddFeatureProperty("anInt32Key");
stringCollection.Add("aDouble");
queryOptions.SetOrderingFilter(stringCollection, MgOrderingOption::Descending);
featureReader = featureService.SelectFeatures(featureSrcResourceId, featClassName, queryOptions);
// process $featureReader
featureReader.Close();
</pre> <h3>Basic Filter OR Spatial Filter </h3>
<p>featId is an identity property, and geometry is a geometry property. The feature whose featId value is 0 has a geometry value of POINT(1 1). The feature whose featid value is 1 has a null geometry value. The spatial filter requests features whose geometry intersects with POINT(1 1). The following select operation returns both of these features. The operation can be coded in two ways. The first way uses the SetFilter(), SetSpatialFilter() and SetBinaryOperator() methods, and the second way uses only the SetFilter() method. </p>
<pre>
sqlplus&gt; select a.featId from featclass a where a.featId = 1 or sdo_relate(a.geometry, MDSYS.SDO_GEOMETRY(2001, NULL, MDSYS.SDO_POINT_TYPE(1,1,NULL), NULL, NULL), 'mask=anyinteract') = 'TRUE';
</pre> <pre>
&lt;?php
$queryOptions-&gt;AddFeatureProperty("featId");
$queryOptions-&gt;SetFilter("featId = 1");
$queryOptions-&gt;SetBinaryOperator(false);
$geometry = $wktReaderWriter-&gt;Read("POINT(1 1)");
$queryOptions-&gt;SetSpatialFilter("geometry", $geometry, <a class="el" href="../../d7/d86/class_mg_feature_spatial_operations_a39c8b54997e89bf332253f47f6d2610c.htm#a39c8b54997e89bf332253f47f6d2610c">MgFeatureSpatialOperations::Intersects</a>);
$featureReader = $featureService-&gt;SelectFeatures($featureSrcResourceId, $featClassName, $queryOptions);
# process $featureReader
$featureReader-&gt;Close();
?&gt;
</pre> <pre>
queryOptions.AddFeatureProperty("featId");
queryOptions.SetFilter("featId = 1");
queryOptions.SetBinaryOperator(false);
geometry = wktReaderWriter.Read("POINT(1 1)");
queryOptions.SetSpatialFilter("geometry", geometry, <a class="el" href="../../d7/d86/class_mg_feature_spatial_operations_a39c8b54997e89bf332253f47f6d2610c.htm#a39c8b54997e89bf332253f47f6d2610c">MgFeatureSpatialOperations::Intersects</a>);
featureReader = featureService.SelectFeatures(featureSrcResourceId, featClassName, queryOptions);
// process $featureReader
featureReader.Close();
</pre> <pre>
&lt;?php
$queryOptions-&gt;AddFeatureProperty("featId");
$queryOptions-&gt;SetFilter("(featId = 1) OR (geometry INTERSECTS GEOMFROMTEXT ( 'POINT(1 1)' )");
$featureReader = $featureService-&gt;SelectFeatures($featureSrcResourceId, $featClassName, $queryOptions);
# process $featureReader
$featureReader-&gt;Close();
?&gt;
</pre> <pre>
queryOptions.AddFeatureProperty("featId");
geometry = wktReaderWriter.Read("POINT(1 1)");
queryOptions.SetFilter("(featId = 1) OR (geometry INTERSECTS GEOMFROMTEXT ( 'POINT(1 1)' )");
featureReader = featureService.SelectFeatures(featureSrcResourceId, featClassName, queryOptions);
// process $featureReader
featureReader.Close();
</pre> <h3>Distance Filter</h3>
<p>featId is an identity property, and geometry is a geometry property. The feature whose featId value is 0 has a geometry value of POINT(1 1). The distance filter requests features whose geometry is within a distance of 1 from POINT(2 1). The following select operation returns the feature whose featId is 0. </p>
<pre>
</pre><p> sqlplus&gt; select a.featId from featclass a where sdo_within_distance(a.geometry, MDSYS SDO_GEOMETRY(2001, NULL, MDSYS.SDO_POINT_TYPE(2,1 NULL), NULL, NULL), 'distance=1') = 'TRUE'; </p>
<pre>
&lt;?php
$queryOptions-&gt;AddFeatureProperty("featId");
$queryOptions-&gt;SetFilter("geometry WITHINDISTANCE GEOMFROMTEXT ('POINT(2 1)') 1");
$featureReader = $featureService-&gt;SelectFeatures($featureSrcResourceId, $featClassName, $queryOptions);
# process $featureReader
$featureReader-&gt;Close();
?&gt;
</pre> <pre>
queryOptions.AddFeatureProperty("featId");
queryOptions.SetFilter("geometry WITHINDISTANCE GEOMFROMTEXT ('POINT(2 1)') 1");
featureReader = featureService.SelectFeatures(featureSrcResourceId, featClassName, queryOptions);
// process $featureReader
featureReader.Close();
</pre> </div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>

    <li class="footer">Comments or suggestions? Send us <a href="http://mapguide.osgeo.org/feedback">feedback</a>. | Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.0 </li>
   </ul>
 </div>


</body>
</html>
